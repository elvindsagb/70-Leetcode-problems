class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
def isPalindrome(head):
    slow=fast=head
    while fast and fast.next:
        slow=slow.next
        fast=fast.next.next
    prev=None
    while slow:
        next_node=slow.next
        slow.next=prev
        prev=slow
        slow=next_node
    left=head
    right=prev
    while right:
        if left.val!=right.val:
            return False
        left=left.next
        right=right.next
    return True
def create_linked_list(values):
    if not values:
        return None
    head=ListNode(values[0])
    curr=head
    for val in values[1:]:
        curr.next=ListNode(val)
        curr=curr.next
    return head

values = list(map(int, input("Enter linked list elements (space-separated): ").split()))
head=create_linked_list(values)
if isPalindrome(head):
    print("The linked list is a palindrome")
else:
    print("The linked list is not a palindrome")
